---
import Tag from './Tag.astro';

interface Props {
    id: string;
    data: any[];
    lang: string;
}

const { id, data, lang } = Astro.props;
let periodEndStr = '';

switch(lang) {
    case 'da':
        periodEndStr = 'nuv√¶rende';
        break;
    default:
        periodEndStr = 'present';
}
---

<div id={id} class="carousel col-span-full grid grid-cols-12 items-center relative">
    <ul class="hidden sm:block sm:col-span-5 md:col-span-4 lg:col-span-3 print:hidden">
        {data.map(exp => (
            <li 
                id={id + '-list-btn-' + exp.id}
                data-carousel={'#' + id}
                data-target={'#' + id + '-slide-' + exp.id}
                class={
                    'carousel-list-btn md:text-lg lg:text-xl font-medium px-4 py-2 border-l-2 '
                    + (data[0].id === exp.id ? 'active' : '')
                }
            >
                {
                    exp.name ? exp.name
                    : exp.institution
                }
            </li>
        ))}
    </ul>

    <div class="carousel-slides-container col-span-full sm:col-span-7 md:col-span-8 lg:col-span-9 relative overflow-hidden print:col-span-full">
        {data.map(exp => (
            <article 
                id={id + '-slide-' + exp.id}
                aria-hidden={(data[0].id === exp.id ? 'false' : 'true')}
                class="slide w-full relative print:mb-4"
            >
                <header class="mb-4 w-full flex flex-col md:mb-2 md:gap-2 md:flex-row print:mb-0 print:flex-row print:justify-between">
                    <div class="text-lg sm:text-xl md:text-2xl md:grow print:text-base">
                        <h4 class="">
                            {
                                exp.name ? exp.name 
                                : exp.institution
                            }
                        </h4>
                        <h5 class="mb-2 print:mb-0">
                            {
                                id === 'school' ? 
                                `${exp.level}, ${exp.institutionShort}`
                                : exp.position
                            }
                        </h5>
                    </div>
                    
                    <span class="experience-period text-sm lg:text-base font-medium border rounded px-2 py-1 print:text-xs">{exp.periodStart} - {exp.periodEnd ? exp.periodEnd : periodEndStr}</span>
                </header>
                <main>
                    <p class="print:text-sm print:mb-2">
                        {exp.description}
                    </p>
                    {
                        exp.skills.length > 0 ? 
                            <ul class="flex flex-wrap gap-2 w-full mt-6 print:gap-1 print:mt-0">
                                {exp.skills.map(skill => (
                                    <Tag text={skill} />
                                ))}
                            </ul>
                        : ""
                    }
                    
                </main>
            </article>
        ))}
        
    </div>
    <nav class="col-span-full flex justify-center gap-2 mt-4 sm:hidden">
        <button
            disabled="true"
            data-carousel={'#' + id}
            data-carousel-direction="prev"
            data-target=""
            data-carousel-active-index="1"
            data-carousel-length={data.length}
            class="carousel-btn inline-flex justify-center items-center w-8 h-8 rounded-full border cursor-pointer"
        >
            <i class="fa-solid fa-arrow-left text-[1.25rem] pointer-events-none"></i>
        </button>
        <button
            data-carousel={'#' + id}
            data-carousel-direction="next"
            data-target={'#' + id + '-slide-2'}
            data-carousel-active-index="1"
            data-carousel-length={data.length}
            class="carousel-btn inline-flex justify-center items-center w-8 h-8 rounded-full border cursor-pointer"
        >
            <i class="fa-solid fa-arrow-right text-[1.25rem] pointer-events-none"></i>
        </button>
    </nav>
</div>

<style>
    li {
        transition-property: color, border-color;
        transition-duration: .15s;
        transition-timing-function: ease-in-out;
        color: var(--color-2);
        border-color: var(--color-3);
        cursor: pointer;
    }

    li.active {
        color: var(--color-1);
        border-color: var(--color-1);
    }

    .carousel-slides-container {
        display: flex;
        overflow-x: auto;
        scroll-snap-type: x mandatory;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
    }

    .carousel-slides-container::-webkit-scrollbar {
        display: none;
    }

    .slide {
        scroll-snap-align: start;
        flex-shrink: 0;
        width: 100%;
        margin-right: 3rem;
    }

    .slide h4 {
        color: var(--color-2);
    }

    html.dark .slide h4 {
        color: var(--color-1);
    }

    .experience-period {
        width: fit-content;
        height: fit-content;
        white-space: nowrap;
        background-color: rgba(var(--color-1-rgb), .1);
        color: var(--color-2);
    }

    html.dark .experience-period {
        color: var(--color-1);
        background-color: var(--color-4);
    }

    .carousel-btn {
        transition-property: color, background-color, border-color;
		transition-duration: .15s;
		transition-timing-function: ease-in-out;
		background-color: rgba(var(--color-1-rgb), .1);
		border-color: rgba(var(--color-2-rgb), 1);
		color: rgba(var(--color-2-rgb), 1);
    }

    .carousel-btn:disabled {
        pointer-events: none;
        cursor: not-allowed;
        opacity: .5;
    }

    html.dark .carousel-btn {
        background-color: var(--color-4);
		border-color: var(--color-3);
		color: var(--color-2);
    }

    .carousel-btn:not(:disabled):hover {
        background-color: rgba(var(--color-1-rgb), .3);
		border-color: rgba(var(--color-3-rgb), 1);
		color: rgba(var(--color-4-rgb), 1);
    }

    html.dark .carousel-btn:not(:disabled):hover {
        background-color: var(--color-3);
		border-color: var(--color-2);
		color: var(--color-1);
    }

    @media print {
        .carousel-slides-container {
            display: block;
        }
    }
</style>
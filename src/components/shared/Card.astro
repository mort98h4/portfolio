---
import type { CollectionEntry } from 'astro:content';
import Tag from './Tag.astro';

interface Props {
	project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const p = project.data;
---

<li id={'project-' + p.id} class="card col-span-10 col-start-2 xs:col-span-8 xs:col-start-3 sm:col-start-auto sm:col-span-6 md:col-span-4 lg:col-span-3 shadow-md hover:shadow-lg">
	<div class="shine"></div>
	<div class="background">
		<div class="tiles">
			<div class="tile tile-1"></div>	
			<div class="tile tile-2"></div>	
			<div class="tile tile-3"></div>	
			<div class="tile tile-4"></div>	
			<div class="tile tile-5"></div>	
			<div class="tile tile-6"></div>	
			<div class="tile tile-7"></div>	
			<div class="tile tile-8"></div>	
			<div class="tile tile-9"></div>	
			<div class="tile tile-10"></div>	
		</div>
		<div class="vertical line line-1"></div>
		<div class="vertical line line-2"></div>
		<div class="vertical line line-3"></div>
		<div class="horizontal line line-1"></div>
		<div class="horizontal line line-2"></div>
		<div class="horizontal line line-3"></div>
	</div>

	<div class="content p-4 pt-14 text-sm">
		<div class="icon inline-flex justify-center items-center w-8 h-8 rounded-full border mb-1">
			<i class="fa-solid fa-code text-base"></i>
		</div>
		
		<h3 class="text-base mb-4">{p.title}</h3>
		<p class="pb-4">{p.body}</p>
		{p.urls.length > 0 ?
			<div class="pb-2">
				<h4>
					<i class="fa-solid fa-globe mr-1"></i>
					{p.urls.length > 1 ? 
						"URLs" : "URL"
					}
				</h4>
				<ul class="">
					{p.urls.map(url => (
						<li class="inline-block">
							<a href={url.href} target="_blank">{url.title}</a>
						</li>
					))}
				</ul>
			</div>
		 : ""}
		<div class="pb-2">
			<h4>
				<i 
					class={
						(p.repositories[0].href.includes("gitlab") ? "fa-gitlab" : "fa-github")
						+ " fa-brands mr-1"}
				></i>
				{p.repositories.length === 1 ? "Repository" : "Repositories"}
			</h4>
			<ul class="">
				{p.repositories.map(repo => (
					<li class="inline-block">
						<a href={repo.href} target="_blank">{repo.name}</a>
					</li>
				))}
			</ul>
		</div>
		<div class="">
			<h4 class="mb-1">
				<i class="fa-solid fa-file-code mr-1"></i>
				Technologies
			</h4>
			<ul class="flex flex-wrap gap-1 w-full">
				{p.technologies.map(tech => (
					<Tag text={tech.name} />
				))}
			</ul>
		</div>
	</div>
</li>

<style>
	.icon {
		transition-property: color, background-color, border-color;
		transition-duration: .15s;
		transition-timing-function: ease-in-out;
		background-color: rgba(var(--color-1-rgb), .1);
		border-color: rgba(var(--color-2-rgb), 1);
		color: rgba(var(--color-2-rgb), 1);
	}
	
	html.dark .icon {
		background-color: var(--color-4);
		border-color: var(--color-3);
		color: var(--color-2);
	}

	.card li.inline-block:not(:last-of-type)::after {
		content: "‚¶Å";
		padding: 0 .25rem;
		color: var(--color-2);
	}

	.card {
		--card-y-coord-perc-1: 0%;
		--card-y-coord-perc-2: 10%;
		--card-y-coord-perc-3: 32.5%;
		--card-y-coord-perc-4: 55%;
		--card-x-coord-perc-1: 0%;
		--card-x-coord-perc-2: 22.5%;
		--card-x-coord-perc-3: 50%;
		--card-x-coord-perc-4: 77.5%;
		--tw-shadow-color: rgba(var(--color-5-rgb), .2);
		
		border: 1px solid;
		border-color: var(--color-3);
		border-radius: .25rem;
		overflow: hidden;
		position: relative;
		transition: border .15s ease-in-out, box-shadow .15s ease-in-out;
	}

	html.dark .card {
		--tw-shadow-color: rgba(var(--color-1-rgb), .2);
	}

	.shine {
		pointer-events: none;
		width: 150%;
		height: 150%;
		position: absolute;
		z-index: -1;
		left: 50%;
		bottom: 55%;
		border-radius: 50%;
		will-change: opacity, transform;
  		transform: translateX(-50%) translateZ(0);
		filter: blur(35px);
		opacity: 0;
		transition: opacity .5s;
		background-image: conic-gradient(from 225deg at 50% 50%, rgba(var(--color-1-rgb), 0) 0deg, var(--color-1) 25deg, rgb(251, 235, 244) 285deg, var(--white) 345deg, rgba(var(--color-1-rgb), 0) 360deg);
	}

	.background {
		pointer-events: none;
		border-radius: inherit;
		position: absolute;
		z-index: -1;
		inset: 0;
		overflow: hidden;
		-webkit-mask-image: radial-gradient(circle at 60% 5%, #000 0%, #000 15%, transparent 60%);
  		mask-image: radial-gradient(circle at 60% 5%, #000 0%, #000 15%, transparent 60%);
	}
	
	.tile {
		position: absolute;
		z-index: -1;
		background-color:rgba(var(--color-1-rgb), .05);
		animation-duration: 8s;
  		-webkit-animation-iteration-count: infinite;
		animation-iteration-count: infinite;
		opacity: 0;
	}

	.tile-4,
	.tile-6,
	.tile-10 {
		-webkit-animation-delay: -2s;
		animation-delay: -2s;
	}

	.tile-3,
	.tile-5,
	.tile-8 {
		-webkit-animation-delay: -4s;
		animation-delay: -4s;
	}

	.tile-2,
	.tile-9 {
		-webkit-animation-delay: -6s;
		animation-delay: -6s;
	}

	.tile-1,
	.tile-2,
	.tile-3,
	.tile-4 {
		top: var(--card-y-coord-perc-1);
		height: 10%;
	}

	.tile-5,
	.tile-6,
	.tile-7,
	.tile-8 {
  		top: var(--card-y-coord-perc-2);
	}

	.tile-9,
	.tile-10 {
  		top: var(--card-y-coord-perc-3);
	}

	.tile-5,
	.tile-6,
	.tile-7,
	.tile-8,
	.tile-9,
	.tile-10 {
  		height: 22.5%;
	}

	.tile-1,
	.tile-4,
	.tile-5,
	.tile-8,
	.tile-10 {
  		width: 22.5%;
	}

	.tile-2,
	.tile-3,
	.tile-6,
	.tile-7,
	.tile-9 {
  		width: 27.5%;
	}

	.tile-1,
	.tile-5 {
		left: var(--card-x-coord-perc-1);
	}

	.tile-2,
	.tile-6 {
  		left: var(--card-x-coord-perc-2);
	}

	.tile-3, 
	.tile-7,
	.tile-9 {
  		left: var(--card-x-coord-perc-3);
	}

	.tile-4,
	.tile-8,
	.tile-10 {
  		left: var(--card-x-coord-perc-4);
	}

	@-webkit-keyframes tile {
  		0%, 12.5%, 100% {
  		  opacity: 1;
  		}
  		25%, 82.5% {
  		  opacity: 0;
  		}
	}

	@keyframes tile {
  		0%, 12.5%, 100% {
  		  opacity: 1;
  		}
  		25%, 82.5% {
  		  opacity: 0;
  		}
	}

	.card .line {
		position: absolute;
		z-index: -1;
		inset: 0;
		background-color: rgba(var(--color-3-rgb), .3);
		opacity: 0;
		transition: opacity .35s, transform .35s;
	}

	html.dark .card .line {
		background-color: var(--color-3);
	}

	.card .vertical.line {
		width: 1px;
		height: 100%;
		transform: scaleY(0);
		transform-origin: 50% 0;
	}

	.card .vertical.line-1 {
		left: var(--card-x-coord-perc-2);
	}

	.card .vertical.line-2 {
		left: var(--card-x-coord-perc-3);
	}

	.card .vertical.line-3 {
		left: var(--card-x-coord-perc-4);
	}

	.card .horizontal.line {
		width: 100%;
		height: 1px;
		transform-origin: 0 50%;
		transform: scaleX(0);
	}

	.card .horizontal.line-1 {
		top: var(--card-y-coord-perc-2);
	}

	.card .horizontal.line-2 {
		top: var(--card-y-coord-perc-3);
	}

	.card .horizontal.line-3 {
		top: var(--card-y-coord-perc-4);
	}

	@media screen and (max-width: 1023px)  {
		.card.hover .icon {
			background-color: rgba(var(--color-1-rgb), .3);
			border-color: rgba(var(--color-3-rgb), 1);
			color: rgba(var(--color-4-rgb), 1);
		}

		html.dark .card.hover .icon {
			background-color: var(--color-3);
			border-color: var(--color-2);
			color: var(--color-1);
		}

		.card.hover {
			border-color: var(--color-2);
		}

		.card.hover .shine {
			opacity: .1;
		}

		.card.hover .tile {
			opacity: 1;
			transition-delay: .25s;
			-webkit-animation-name: tile;
			animation-name: tile;
		}

		.card.hover .vertical.line {
			transform: scaleY(1);
			opacity: 1;
		}

		.card.hover .horizontal.line {
			transform: scaleX(1);
			opacity: 1;
		}
	}

	@media screen and (min-width: 1024px) {

		.card:hover .icon {
			background-color: rgba(var(--color-1-rgb), .3);
			border-color: rgba(var(--color-3-rgb), 1);
			color: rgba(var(--color-4-rgb), 1);
		}

		html.dark .card:hover .icon {
			background-color: var(--color-3);
			border-color: var(--color-2);
			color: var(--color-1);
		}
		
		.card:hover {
			border-color: var(--color-2);
		}

		.card:hover .shine {
			opacity: .1;
		}

		.card:hover .tile {
			opacity: 1;
			transition-delay: .25s;
			-webkit-animation-name: tile;
			animation-name: tile;
		}

		.card:hover .vertical.line {
			transform: scaleY(1);
			opacity: 1;
		}

		.card:hover .horizontal.line {
			transform: scaleX(1);
			opacity: 1;
		}
	}

</style>

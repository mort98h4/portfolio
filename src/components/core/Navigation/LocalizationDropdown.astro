---
import { mainLang, supportedLangs } from "../../../pages/[...path].astro";

interface Props {
    lang: string;
    title: string;
}

const { lang, title } = Astro.props;
---

<button id="language-toggler" title={title}  role="button" class="icon-btn dropdown-toggle" aria-expanded="false">
    <i class="fa-solid fa-flag text-[1.5rem] pointer-events-none"></i>
</button>
<ul class="dropdown-menu rounded">
    {supportedLangs.map((supLan) => (
        <li class="dropdown-item">
            <a 
                class={supLan === lang ? 'active' : ''}
                href={supLan !== mainLang ? `/${supLan}` : '/'}
            >
                {supLan.toUpperCase()}
            </a>
        </li>
    ))}
</ul>

<style>
    .icon-btn.dropdown-toggle {
        width: fit-content;
    }

    .dropdown-toggle::before {
        display: inline-block;
        margin-right: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
        transition: transform .15s ease-in-out;
        transform: rotate(0deg);
    }

    .dropdown-toggle[aria-expanded="true"]::before {
        transform: rotate(180deg);
    } 

    .dropdown-menu {
        position: absolute;
        top: calc(100% + .5rem);
        background-color: var(--white);
        border: 1px solid var(--color-3);
        padding: .5rem 0;
        min-width: 100%;
        display: none;
        z-index: 1;
    }

    html.dark .dropdown-menu {
        background-color: var(--color-5);
    }

    .dropdown-menu.show {
        display: block;
    }

    .dropdown-item a {
        display: inline-block;
        text-align: center;
        padding: .25rem .5rem;
        transition: color .15s ease-in-out, background-color .15s ease-in-out;
        font-weight: 500;
        width: 100%;
    }

    .dropdown-item a.active {
        font-weight: 700;
        background-color: rgba(var(--color-1-rgb), .3);
        color: var(--color-1);
    }

    .html.dark .dropdown-item a.active {
        background-color: var(--color-3);
        color: var(--color-1);
    }

    .dropdown-item:hover a, .dropdown-item:focus a {
        background: rgba(var(--color-1-rgb), .3);
        color: var(--color-1);
    }

    html.dark .dropdown-item:hover a, html.dark .dropdown-item:focus a {
        background: var(--color-3);
    }
</style>